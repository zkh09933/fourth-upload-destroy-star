{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","default","tooltip","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","update","dt","xSpeed","Math","abs","node","x","screenX","parent","width","xNode","onLoad","runAction","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","manager","director","getCollisionManager","enabled","enableDebugDraw","onDestroy","off"],"mappings":"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","file":"player.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n       jumpHeight:{\r\n           default: 0,\r\n           tooltip:'跳跃高度'\r\n       },\r\n       jumpDuration:{\r\n           default: 0,\r\n           tooltip:'主角持续跳跃时间'\r\n       },\r\n      maxMoveSpeed:{\r\n          default: 0,\r\n          tooltip:'最大移动速度'\r\n      },\r\n      accel:{\r\n          default: 0,\r\n          tooltip:'加速度'\r\n      },\r\n      jumpAudio: {\r\n          default:null,\r\n          type: cc.AudioClip,\r\n\r\n      },\r\n      \r\n    },\r\n\r\n    setJumpAction: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        //添加回调\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        // 不断重复\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n\r\n    onKeyDown (event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onKeyUp (event) {\r\n        // unset a flag when key released\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n\r\n    update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n\r\n        //防止主角超出边界\r\n        this.screenX = this.node.parent.width/2;\r\n        var xNode = this.node.x;\r\n        if(Math.abs(xNode)>this.screenX){\r\n            this.node.x = this.screenX * xNode/Math.abs(xNode) ;\r\n            this.xSpeed = 0;\r\n        }\r\n\r\n\r\n    },\r\n\r\n\r\n     onLoad () {\r\n         // 初始化跳跃动作\r\n         //this.jumpAction = this.setJumpAction();\r\n         this.node.runAction(this.setJumpAction());\r\n\r\n         this.accLeft = false;\r\n         this.accRight = false;\r\n         // 主角当前水平方向速度\r\n         this.xSpeed = 0;\r\n \r\n         // 初始化键盘输入监听\r\n         cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n         cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);   \r\n\r\n         var manager = cc.director.getCollisionManager();\r\n         manager.enabled = true;\r\n         manager.enableDebugDraw = false;\r\n         \r\n     },\r\n   \r\n\r\n    \r\n\r\n \r\n     onDestroy () {\r\n         // 取消键盘输入监听\r\n         cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n         cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n     },\r\n\r\n     \r\n\r\n    \r\n});\r\n"]}